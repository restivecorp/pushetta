<?xml version = "1.0" encoding = "UTF-8"?>
<beans xmlns = "http://www.springframework.org/schema/beans"
	xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context = "http://www.springframework.org/schema/context"
	xmlns:tx = "http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:p = "http://www.springframework.org/schema/p"
	xmlns:jpa = "http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation = "http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd  
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd  
	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="false" />
		<property name="locations">
			<list>
				<value>file:${pushetta.path}/db.properties</value>
				<value>file:${pushetta.path}/pushetta.properties</value>
				<value>file:${pushetta.path}/cron.properties</value>
			</list>
		</property>
	</bean>

	<bean id="serverLog4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		p:target-class="org.springframework.util.Log4jConfigurer"
		p:target-method="initLogging">
		<property name="arguments">
			<list>
				<bean class="java.lang.String">
					<constructor-arg value="file:${pushetta.path}/log4j.xml" />
				</bean>
			</list>
		</property>
	</bean>
	
	<context:annotation-config />	
	<task:annotation-driven />
	<context:component-scan base-package = "ruboweb.pushetta" />	
	
	<!-- data source with c3p0 -->
	<bean id = "dataSource" class = "com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method = "close"
        p:driverClass = "${jdbc.driverClassName}"
        p:jdbcUrl = "${jdbc.url}"
        p:user = "${jdbc.username}"
        p:password = "${jdbc.password}"
        p:acquireIncrement = "${c3p0.acquire_increment}"
        p:minPoolSize = "${c3p0.min_size}"
        p:maxPoolSize = "${c3p0.max_size}" 
        p:maxIdleTime = "${c3p0.max_idle_time}"
        p:unreturnedConnectionTimeout = "${c3p0.unreturned_connection_timeout}"/>
        
    <!-- Hibernate as JPA vendor-->
    <bean class = "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    
    <jpa:repositories base-package = "ruboweb.pushetta.back.repository" />
    	
	<bean id = "jpaAdapter"
		class = "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database = "${jpa.database}" p:showSql = "${hibernate.show_sql}" />

	<bean id = "entityManagerFactory"
		class = "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref = "dataSource" p:packagesToScan = "ruboweb.pushetta.back.model"
		p:jpaVendorAdapter-ref = "jpaAdapter">

		<property name = "jpaProperties">
			<props>
				<prop key = "hibernate.dialect">${hibernate.dialect}</prop>
				<prop key = "hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<prop key = "hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key = "hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key = "hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key = "hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key = "hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key = "hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key = "hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key = "hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
			</props>
		</property>

		<property name = "loadTimeWeaver">
			<bean class = "org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
	</bean>
	
	<!-- Transaction manager -->
	<tx:annotation-driven transaction-manager = "transactionManager" />
	
	<bean id = "transactionManager" class = "org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref = "entityManagerFactory" />

</beans>